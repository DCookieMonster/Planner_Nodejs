<!DOCTYPE html>
<html>
<head>
  <% include ../partials/header.ejs %>
    <script src="/bower_components/Chart.js/dist/Chart.js"></script>
    <script src="/bower_components/d3/d3.min.js"></script>
    <script src="/bower_components/mathjs/dist/math.min.js"></script>

    <script>
    (function() {
        "use strict";

        var app = angular.module("myApp", ["ngTable"]);
        var result=  <%-JSON.stringify(results)%>;
        app.controller("demoController", demoController);


        function demoController(NgTableParams) {
            var self = this;
            self.tableParams = new NgTableParams({}, {
                dataset:result
            });
        }
    })();
</script>

</head>

<body>

<!--<% include ../partials/nav.ejs %>-->

<div class="container">
<h2>Database Results</h2>

    <div ng-app="myApp">
        <div ng-controller="demoController as demo">
        <div class="row">
            <div class="col-lg-10"></div>
            <div class="col-lg-2">
                <button onclick="download()" class="btn btn-primary">
                  Download as CSV
                </button>
            </div>
        </div>
            <table ng-table="demo.tableParams" class="table table-condensed table-bordered table-striped">
                <tr ng-repeat="row in $data">
                    <td data-title="'userId'" filter="{userId: 'text'}" sortable="'userId'">{{row.userId}}</td>
                    <td data-title="'Age'" filter="{age: 'number'}" sortable="'age'">{{row.age}}</td>
                    <td data-title="'Gender'" filter="{gender: 'text'}" sortable="'gender'">{{row.gender}}</td>
                    <td data-title="'Duration Instruction'" filter="{DurationInstruction: 'number'}" sortable="'DurationInstruction'">{{row.DurationInstruction}}</td>
                    <td data-title="'Number Of Quizs'" filter="{NumberOfTimeInQuiz: 'number'}" sortable="'NumberOfTimeInQuiz'">{{row.NumberOfTimeInQuiz}}</td>
                    <td data-title="'Duration Quiz'" filter="{DurationQuiz: 'number'}" sortable="'DurationQuiz'">{{row.DurationQuiz}}</td>
                    <td data-title="'Duration Training'" filter="{DurationTraining: 'number'}" sortable="'DurationTraining'">{{row.DurationTraining}}</td>
                    <td data-title="'Score'" filter="{Score: 'number'}" sortable="'Score'">{{row.Score}}</td>
                    <td data-title="'Win'" filter="{Win: 'text'}" sortable="'Win'">{{row.Win}}</td>
                    <td data-title="'Grid Size'" filter="{GridSize: 'text'}" sortable="'GridSize'">{{row.GridSize}}</td>
                    <td data-title="'Start Cost'" filter="{startScore: 'number'}" sortable="'startScore'">{{row.startScore}}</td>
                    <td data-title="'Middle Cost'" filter="{middleScore: 'number'}" sortable="'middleScore'">{{row.middleScore}}</td>
                    <td data-title="'End Cost'" filter="{endScore: 'number'}" sortable="'endScore'">{{row.endScore}}</td>
                </tr>
            </table>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-3">
            <h5 class="text-center">Gender Pie</h5>
            <canvas id="myChart" width="200" height="200"></canvas>

        </div>
        <div class="col-lg-3">
            <h5 class="text-center">Win/Lose Pie</h5>
            <canvas id="winChart" width="200" height="200"></canvas>

        </div>
    </div>
    <div class="row">
        <div class="col-lg-4">
            <h5 class="text-center">Start Cost <small>Mean: <span id="startScoreMean"></span>, Std: <span id="startScoreStd"></span> </small></h5>
            <h5 class="text-center">Real Cost: <strong>8</strong></h5>

            <canvas id="startScoreChart" width="200" height="200"></canvas>

        </div>
        <div class="col-lg-4">
            <h5 class="text-center">Middle Cost <small>Mean: <span id="middleScoreMean"></span>, Std: <span id="middleScoreStd"></span> </small></h5>
            <h5 class="text-center">Real Cost: <strong>8</strong></h5>

            <canvas id="middleScoreChart" width="200" height="200"></canvas>

        </div>
        <div class="col-lg-4">
            <h5 class="text-center">End Cost <small>Mean: <span id="endScoreMean"></span>, Std: <span id="endScoreStd"></span> </small></h5>
            <h5 class="text-center">Real Cost: <strong>7</strong></h5>
            <canvas id="endScoreChart" width="200" height="200"></canvas>

        </div>


    </div>

</div>
<script>
    var result=  <%-JSON.stringify(results)%>;


    var gender_data = d3.nest() //Build a dataset for the pie chart
            .key(function(d) {
                return d.gender;
            })
            .entries(result)
    console.log(gender_data);
    var ctx = document.getElementById("myChart");
    var labels=[];
    var data=[];
    for (i in gender_data){
        labels.push(gender_data[i].key);
        data.push(gender_data[i].values.length);
    }
    var data = {
        labels: labels,
        datasets: [
            {
                label: "Gender Pie",
                backgroundColor:  [
                    "#FF6384",
                    "#4BC0C0",
                    "#FFCE56",
                    "#E7E9ED",
                    "#36A2EB"
                ],
                borderColor: "rgba(255,99,132,1)",
                borderWidth: 1,
                hoverBackgroundColor: "rgba(255,99,132,0.4)",
                hoverBorderColor: "rgba(255,99,132,1)",
                data: data,
            }
        ]
    };

    var myChart = new Chart(ctx, {
        type: 'pie',
        data: data,
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero:true
                    }
                }]
            }
        }
    });
</script>
<script>
    function drawBarGrah(id,data,label,realCost){
        console.log(data);
        var ctx = document.getElementById(id+"Chart");
        var labels=[];
        var arr_data=[];

        for (i in data){
            labels.push(data[i].key);
            arr_data.push(data[i].values.length);
        }
        var math_data=[];
        for (i in data){
            for (j in data[i].values){
                math_data.push(data[i].key);
            }
        }

        $("#"+id+"Mean")[0].innerHTML=math.round(math.mean(math_data),3);
        $("#"+id+"Std")[0].innerHTML=math.round(math.std(math_data),3);

        var bar_data = {
            labels: labels,
            datasets: [
                {
                    label: "Number Of Votes",
                    backgroundColor: "rgba(255,99,132,0.2)",
                    borderColor: "rgba(255,99,132,1)",
                    borderWidth: 1,
                    hoverBackgroundColor: "rgba(255,99,132,0.4)",
                    hoverBorderColor: "rgba(255,99,132,1)",
                    data: arr_data,

                }
            ]
        };

        var myChart = new Chart(ctx, {
            type: 'bar',
            data: bar_data,
            options: {
                responsive: true,
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero:true
                        }
                    }]
                }

                }


        });
    }

    var win_data = d3.nest() //Build a dataset for the pie chart
            .key(function(d) {
                if (d.Win==""){
                    return "false";
                }
                return d.Win;
            })
            .entries(result)
    console.log(win_data);
    var ctx = document.getElementById("winChart");
    var labels=[];
    var data=[];


    for (i in win_data){
        labels.push(win_data[i].key);
        data.push(win_data[i].values.length);
    }

    var data = {
        labels: labels,
        datasets: [
            {
                label: "Win Pie",
                backgroundColor:  [
                    "#FF6384",
                    "#4BC0C0",
                    "#FFCE56",
                    "#E7E9ED",
                    "#36A2EB"
                ],
                borderColor: "rgba(255,99,132,1)",
                borderWidth: 1,
                hoverBackgroundColor: "rgba(255,99,132,0.4)",
                hoverBorderColor: "rgba(255,99,132,1)",
                data: data
            }
        ]
    };

    var myChart = new Chart(ctx, {
        type: 'pie',
        data: data,
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero:true
                    }
                }]
            }
        }
    });
</script>
<script>


    var start_data = d3.nest() //Build a dataset for the pie chart
            .key(function(d) {
                return d.startScore;
            })
            .entries(result)
    drawBarGrah("startScore",start_data,"Start",8)

    var middle_data = d3.nest() //Build a dataset for the pie chart
            .key(function(d) {
                return d.middleScore;
            })
            .entries(result)
    drawBarGrah("middleScore",middle_data,"Middle",8)

    var end_data = d3.nest() //Build a dataset for the pie chart
            .key(function(d) {
                return d.endScore;
            })
            .entries(result)
    drawBarGrah("endScore",end_data,"End",7)

    function download(){
       window.location="/csv"
    }
</script>

</body>
</html>
